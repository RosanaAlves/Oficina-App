 1. Adicionar Campos no Modelo Veiculo

Atualize seu modelo para registrar a √∫ltima troca de √≥leo e a quilometragem:
python
Copy

# models.py
class Veiculo(models.Model):
    cliente = models.ForeignKey(Cliente, on_delete=models.CASCADE)
    modelo = models.CharField(max_length=50)
    placa = models.CharField(max_length=10, unique=True)
    quilometragem_atual = models.PositiveIntegerField(default=0)
    ultima_troca_oleo = models.PositiveIntegerField(default=0)  # KM na √∫ltima troca
    data_ultima_troca = models.DateField(null=True, blank=True)
    proxima_troca_km = models.PositiveIntegerField(default=10000)  # Intervalo padr√£o (ex.: 10.000 km)

üìå 2. Criar uma View para Alertas
python
Copy

# views.py
from django.utils import timezone
from datetime import timedelta

def alertas_troca_oleo(request):
    # Ve√≠culos com quilometragem pr√≥xima da troca (90% do intervalo)
    alertas = []
    veiculos = Veiculo.objects.all()
    
    for veiculo in veiculos:
        km_restantes = veiculo.proxima_troca_km - (veiculo.quilometragem_atual - veiculo.ultima_troca_oleo)
        if km_restantes <= (veiculo.proxima_troca_km * 0.1):  # 10% do intervalo restante
            alertas.append({
                'veiculo': veiculo,
                'km_restantes': km_restantes,
                'cliente': veiculo.cliente
            })
    
    return render(request, 'alertas_troca_oleo.html', {'alertas': alertas})

üìå 3. Template para Exibir Alertas (alertas_troca_oleo.html)
html
Copy

<h1>Clientes Pr√≥ximos da Troca de √ìleo</h1>
<table>
  <tr>
    <th>Cliente</th>
    <th>Ve√≠culo</th>
    <th>KM Restantes</th>
    <th>Telefone</th>
  </tr>
  {% for alerta in alertas %}
  <tr>
    <td>{{ alerta.cliente.nome }}</td>
    <td>{{ alerta.veiculo.modelo }} ({{ alerta.veiculo.placa }})</td>
    <td>{{ alerta.km_restantes }} km</td>
    <td><a href="https://wa.me/{{ alerta.cliente.telefone_whatsapp }}">üìû WhatsApp</a></td>
  </tr>
  {% endfor %}
</table>

Run HTML
üìå 4. URL para Acessar os Alertas
python
Copy

# urls.py
urlpatterns = [
    path('alertas/troca-oleo/', views.alertas_troca_oleo, name='alertas_troca_oleo'),
]

üìå 5. Comando para Enviar Notifica√ß√µes Autom√°ticas

Crie um cron job ou use o Celery para enviar alertas peri√≥dicos:
python
Copy

# management/commands/enviar_alertas.py
from django.core.management.base import BaseCommand
from django.utils import timezone
from oficina.models import Veiculo
from oficina.utils import enviar_whatsapp  # Fun√ß√£o criada anteriormente

class Command(BaseCommand):
    help = 'Envia alertas de troca de √≥leo via WhatsApp'

    def handle(self, *args, **options):
        veiculos = Veiculo.objects.filter(
            quilometragem_atual__gte=models.F('ultima_troca_oleo') + models.F('proxima_troca_km') * 0.9
        )
        
        for veiculo in veiculos:
            mensagem = (
                f"Ol√° {veiculo.cliente.nome}! Seu {veiculo.modelo} est√° pr√≥ximo da troca de √≥leo. "
                f"Faltam apenas {veiculo.proxima_troca_km - (veiculo.quilometragem_atual - veiculo.ultima_troca_oleo)} km. "
                "Agende um hor√°rio conosco!"
            )
            enviar_whatsapp(veiculo.cliente, mensagem)

Para executar diariamente (via cron):
bash
Copy

0 9 * * * /caminho/para/python /caminho/para/manage.py enviar_alertas

üìå 6. Painel Administrativo Personalizado

Adicione um filtro no admin do Django para visualizar os alertas:
python
Copy

# admin.py
from django.contrib import admin
from .models import Veiculo

class VeiculoAdmin(admin.ModelAdmin):
    list_display = ('modelo', 'placa', 'cliente', 'km_para_troca')
    list_filter = ('proxima_troca_km',)

    def km_para_troca(self, obj):
        return obj.proxima_troca_km - (obj.quilometragem_atual - obj.ultima_troca_oleo)
    km_para_troca.short_description = 'KM at√© a troca'

admin.site.register(Veiculo, VeiculoAdmin)

üåü Funcionalidades Adicionais Sugeridas

    Cadastro de Tipos de √ìleo:
    Adicione um modelo TipoOleo para registrar qual √≥leo foi usado em cada ve√≠culo.

    Hist√≥rico de Trocas:
    Crie um modelo Manutencao para registrar todas as trocas passadas.

    Integra√ß√£o com API de Consulta de Placa:
    Use servi√ßos como FIPE para pr√©-preencher dados do ve√≠culo.

üì± Exemplo de Notifica√ß√£o no WhatsApp
Copy

Ol√° Jo√£o! Seu Ford Ka (ABC-1234) est√° pr√≥ximo da troca de √≥leo. Faltam apenas 850 km. 
Agende um hor√°rio: [link_para_agendamento]

Com essa implementa√ß√£o, o dono da empresa poder√°:
‚úÖ Visualizar clientes pr√≥ximos da troca em uma p√°gina dedicada.
‚úÖ Receber relat√≥rios peri√≥dicos.
‚úÖ Enviar notifica√ß√µes autom√°ticas via WhatsApp.